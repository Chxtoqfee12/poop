local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")

local player = Players.LocalPlayer

-- ‡πÇ‡∏´‡∏•‡∏î Rayfield
local Rayfield = loadstring(game:HttpGet('https://raw.githubusercontent.com/Chxtoqfee12/script-admin-chx/refs/heads/main/chx.lib'))()

-- ‡∏™‡∏£‡πâ‡∏≤‡∏á Window ‡∏´‡∏•‡∏±‡∏Å
local Window = Rayfield:CreateWindow({
    Name = "üí© Auto Farm UI",
    LoadingTitle = "‡∏≠‡∏≠‡πÇ‡∏ï‡πâ‡∏Ç‡∏∂‡πâ ",
    LoadingSubtitle = "By ‡∏≠‡∏µ‡∏´‡∏ô‡∏∂‡πà‡∏á",
})

----------------------------------------------------
-- Tab: Auto Poop
----------------------------------------------------
local poopTab = Window:CreateTab("Auto Poop", "zap")

local autoPoop = false
local poopSpeed = 1
local lbThreshold = 5 -- ‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏ó‡∏¥‡πâ‡∏á‡∏ñ‡πâ‡∏≤‡∏ô‡πâ‡∏≠‡∏¢‡∏Å‡∏ß‡πà‡∏≤ 5 lbs
local autoDrop = true -- ‡πÄ‡∏õ‡∏¥‡∏î Auto Drop

-- Slider ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ Poop Speed
poopTab:CreateSlider({
    Name = "Poop Speed (sec)",
    Range = {0.3, 5}, 
    Increment = 0.1,
    Suffix = "s",
    CurrentValue = 1,
    Flag = "PoopSpeed",
    Callback = function(Value)
        poopSpeed = Value
    end,
})

-- Slider ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ LB Threshold
poopTab:CreateSlider({
    Name = "LB Threshold",
    Range = {1, 50}, 
    Increment = 1,
    Suffix = "lbs",
    CurrentValue = lbThreshold,
    Flag = "LBThreshold",
    Callback = function(Value)
        lbThreshold = Value
    end,
})

-- ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏î‡∏∂‡∏á lb ‡∏à‡∏≤‡∏Å‡∏ä‡∏∑‡πà‡∏≠‡πÑ‡∏≠‡πÄ‡∏ó‡πá‡∏°
local function getLBFromName(itemName)
    local lbStr = itemName:match("%(([%d%.]+) lbs%)")
    if lbStr then
        return tonumber(lbStr)
    end
    return nil
end

-- ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ñ‡∏∑‡∏≠‡πÑ‡∏≠‡πÄ‡∏ó‡πá‡∏°‡πÅ‡∏•‡∏∞‡∏ó‡∏¥‡πâ‡∏á‡∏ñ‡πâ‡∏≤ lb ‡∏ï‡πà‡∏≥
local function checkAndDropItem(item)
    local lb = getLBFromName(item.Name)
    if lb and lb < lbThreshold then
        -- ‡∏ñ‡∏∑‡∏≠‡πÑ‡∏≠‡πÄ‡∏ó‡πá‡∏°‡∏Ç‡∏∂‡πâ‡∏ô‡∏°‡∏∑‡∏≠‡∏î‡πâ‡∏ß‡∏¢ Remote
        if ReplicatedStorage:FindFirstChild("SetToolGrip") then
            local args = {
                item,
                CFrame.new(0,0,0) -- ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏õ‡∏£‡∏±‡∏ö CFrame ‡∏ï‡∏≤‡∏°‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£
            }
            ReplicatedStorage.SetToolGrip:FireServer(unpack(args))
            task.wait(0.1)
        end

        -- ‡∏ó‡∏¥‡πâ‡∏á‡πÑ‡∏≠‡πÄ‡∏ó‡πá‡∏°‡∏î‡πâ‡∏ß‡∏¢ Backspace ‡∏´‡∏£‡∏∑‡∏≠ Remote Drop
        UserInputService.InputBegan:Fire({KeyCode = Enum.KeyCode.Backspace})
        task.wait(0.1)
    end
end

-- ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÉ‡∏ô Backpack
local function dropLowLBItems()
    local backpack = player:FindFirstChild("Backpack")
    if backpack then
        for _, item in pairs(backpack:GetChildren()) do
            checkAndDropItem(item)
        end
    end
end

-- Toggle ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏õ‡∏¥‡∏î Auto Poop
poopTab:CreateToggle({
    Name = "Enable Auto Poop + Auto Drop",
    CurrentValue = false,
    Flag = "AutoPoopDrop",
    Callback = function(Value)
        autoPoop = Value
        if autoPoop then
            task.spawn(function()
                while autoPoop do
                    -- ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏°‡∏¥‡∏ô‡∏¥‡πÄ‡∏Å‡∏° Poop
                    ReplicatedStorage:WaitForChild("PoopChargeStart"):FireServer()
                    task.wait(0.2)
                    -- ‡∏à‡∏ö‡∏°‡∏¥‡∏ô‡∏¥‡πÄ‡∏Å‡∏°‡πÅ‡∏ö‡∏ö Auto
                    ReplicatedStorage:WaitForChild("PoopEvent"):FireServer(1)

                    -- ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÑ‡∏≠‡πÄ‡∏ó‡πá‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÉ‡∏ô‡∏Å‡∏£‡∏∞‡πÄ‡∏õ‡πã‡∏≤
                    if autoDrop then
                        dropLowLBItems()
                    end

                    task.wait(poopSpeed)
                end
            end)
        end
    end,
})
